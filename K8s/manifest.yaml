apiVersion: v1
kind: ConfigMap
metadata:
  name: config
data:
  MODEL_PATH: "/app/models/trained_model.pkl"
  LOG_LEVEL: "INFO"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-creator
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "create", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: bind-pod-creator
  namespace: default
subjects:
  - kind: ServiceAccount
    name: serviceaccount
    namespace: default
roleRef:
  kind: Role
  name: pod-creator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-api
  labels:
    app: model-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: model-api
  template:
    metadata:
      labels:
        app: model-api
    spec:
      containers:
        - name: model-api
          image: model-api:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8000
          env:
            - name: MODEL_PATH
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: MODEL_PATH
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: LOG_LEVEL
          resources:
            requests:
              cpu: "250m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
      serviceAccountName: serviceaccount
      automountServiceAccountToken: false
      tolerations:
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 300
      livenessProbe:
        httpGet:
          path: /healthz
          port: 8000
        initialDelaySeconds: 30
        periodSeconds: 10
      readinessProbe:
        httpGet:
          path: /readiness
          port: 8000
        initialDelaySeconds: 5
        periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: model-api-service
  labels:
    app: model-api
spec:
  selector:
    app: model-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  type: NodePort
